{"ast":null,"code":"var _jsxFileName = \"/home/plotvichka_2/bsu/3_course/TP/Online-market/react-project/market/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Chat.css';\nimport './ChatAuth.css';\nimport './Error.css';\nimport axios from 'axios';\nimport messageIcon from './chatIcons/ChatIcon.svg';\nimport closeIcon from './chatIcons/CloseIcon.svg';\nimport backArrow from './chatIcons/BackArrow.png';\nimport sendIcon from './chatIcons/SendIcon.svg';\nimport searchIcon from './chatIcons/SearchIcon.svg';\nimport clipIcon from './chatIcons/ClipIcon.svg';\nimport stickerIcon from './chatIcons/StickerIcon.svg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [closing, setClosing] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [file, setFile] = useState(null);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [ws, setWs] = useState(null);\n  const [error, setError] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Authentication state\n  const [isRegistering, setIsRegistering] = useState(false); // Registration state\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [chats, setChats] = useState([]); // Все чаты\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Запрос поиска\n  const [selectedChat, setSelectedChat] = useState(null); // Текущий выбранный чат\n\n  useEffect(() => {\n    console.log(\"using useEffect\");\n    console.log(new Date().toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }));\n    const socket = new WebSocket(`ws://localhost:8000/ws/chats/${username}/`);\n    socket.onopen = () => console.log('WebSocket connected');\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      console.log(data);\n      // setMessages((prev) => [...prev, data]);\n      // setMessages([data])\n    };\n    socket.onerror = error => console.error('WebSocket Error:', error);\n    socket.onclose = () => console.log('WebSocket connection closed');\n    setWs(socket);\n    return () => {\n      socket.close();\n    };\n  }, [username]);\n\n  // const handleSend = () => {\n  //   if (inputValue.trim() || file) {\n  //     console.log(\"sending message..\")\n  //     const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  //     const socket = new WebSocket(`ws://localhost:8000/ws/chats/${username}/${selectedChat.username}/`);\n  //     socket.onopen = () => {\n  //       console.log('WebSocket connected');\n  //       console.log(\"before send\")\n  //       ws.send(JSON.stringify({ text: inputValue, file: file ? URL.createObjectURL(file) : null, timestamp }));\n  //       console.log(\"after send\")\n  //     }\n  //     socket.onmessage = (event) => {\n  //       const data = JSON.parse(event.data);\n  //       selectedChat.messages = [selectedChat.messages, data.message]\n  //       console.log(selectedChat)\n  //       // setMessages((prev) => [...prev, data]);\n  //       // setMessages([data])\n  //     };\n  //     socket.onerror = (error) => console.error('WebSocket Error:', error);\n  //     socket.onclose = () => console.log('WebSocket connection closed');\n  //     setWs(socket)\n  //   // return () => {\n  //   //   socket.close();\n  //   // };\n  //   //   if (ws) {\n  //   //     ws.send(JSON.stringify({ text: inputValue, file: file ? URL.createObjectURL(file) : null, timestamp }));\n  //   //   }\n  //     setMessages([...messages, { text: inputValue, file, type: 'sent', timestamp }]);\n  //     setInputValue('');\n  //     setFile(null);\n  //     console.log(\"end sending...\")\n  //   }\n  // };\n\n  const handleSend = () => {\n    if (inputValue.trim() || file) {\n      console.log(\"Initializing WebSocket...\");\n      const timestamp = new Date().toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      const socket = new WebSocket(`ws://localhost:8000/ws/chats/${username}/${selectedChat.username}/`);\n\n      // Создаем Promise для ожидания успешного подключения WebSocket\n      const waitForConnection = new Promise((resolve, reject) => {\n        socket.onopen = () => {\n          console.log('WebSocket connected');\n          resolve(socket);\n        };\n        socket.onerror = error => {\n          console.error('WebSocket Error:', error);\n          reject(error);\n        };\n      });\n      waitForConnection.then(connectedSocket => {\n        console.log(\"WebSocket ready to send message\");\n        const messageData = JSON.stringify({\n          text: inputValue,\n          file: file ? URL.createObjectURL(file) : null,\n          timestamp\n        });\n        connectedSocket.send(messageData);\n        console.log(\"Message sent:\", messageData);\n\n        // Сохраняем WebSocket в состоянии, чтобы поддерживать связь\n        setWs(connectedSocket);\n\n        // Обновляем список сообщений\n        setMessages([...messages, {\n          text: inputValue,\n          file,\n          type: 'sent',\n          timestamp\n        }]);\n        setInputValue('');\n        setFile(null);\n      }).catch(error => {\n        console.error(\"Failed to establish WebSocket connection:\", error);\n      });\n\n      // Обработка сообщений и закрытия WebSocket\n      socket.onmessage = event => {\n        const data = JSON.parse(event.data);\n        console.log(\"Message received:\", data);\n        setMessages(prevMessages => [...prevMessages, {\n          text: data.message,\n          type: 'received',\n          timestamp: data.timestamp\n        }]);\n      };\n      socket.onclose = () => {\n        console.log('WebSocket connection closed');\n      };\n    }\n  };\n  const handleLogin = async () => {\n    if (username && password) {\n      // setIsAuthenticated(true);\n      try {\n        let response = await axios.post('http://localhost:8000/chat/login/', {\n          username,\n          password\n        });\n        if (response.data.success) {\n          setIsAuthenticated(true);\n          response = await axios.post('http://localhost:8000/chat/load/', {\n            username\n          });\n          console.log(response);\n          console.log(response.data);\n\n          // console.log(response.data.alina)\n          setChats(response.data);\n        } else {\n          setError('Неверный логин или пароль');\n        }\n      } catch (error) {\n        setError('Ошибка при авторизации');\n      }\n    } else {\n      setError('Введите корректные данные для входа.');\n    }\n  };\n  const handleRegister = () => {\n    // Mock registration logic; replace with API call if needed\n    if (username && password) {\n      alert('Пользователь зарегистрирован!');\n      setIsRegistering(false);\n    } else {\n      alert('Введите корректные данные для регистрации.');\n    }\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isRegistering ? 'Регистрация' : 'Вход'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"auth-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"auth-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isRegistering ? handleRegister : handleLogin,\n          className: \"auth-button\",\n          children: isRegistering ? 'Зарегистрироваться' : 'Войти'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRegistering(!isRegistering),\n          className: \"toggle-button\",\n          children: isRegistering ? 'Уже есть аккаунт? Войти' : 'Нет аккаунта? Зарегистрироваться'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/path/to/error-icon.svg\",\n            alt: \"Error\",\n            className: \"error-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      onClick: () => setIsOpen(true),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [\"\\u041F\\u043E\\u044F\\u0432\\u0438\\u043B\\u0438\\u0441\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B? \\u041F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u043D\\u0430\\u043C!\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: messageIcon,\n            alt: \"Message icon\",\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-window ${isOpen ? 'open' : 'close'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: backArrow,\n            alt: \"\\u041D\\u0430\\u0437\\u0430\\u0434\",\n            className: \"icon\",\n            onClick: () => setSelectedChat(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u0427\\u0430\\u0442 \\u0441 \", selectedChat.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0412\\u0430\\u0448\\u0438 \\u0447\\u0430\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: closeIcon,\n          alt: \"Close chat\",\n          className: \"icon\",\n          onClick: () => setIsOpen(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), !selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-field\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u0447\\u0430\\u0442\\u043E\\u0432...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-list\",\n          children: chats.filter(chat => chat.username.toLowerCase().includes(searchQuery.toLowerCase())).map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-item\",\n            onClick: () => {\n              console.log(chat);\n              console.log(\"aaaaaaaaaaaaaaaaaaa\");\n              setSelectedChat(chat);\n            },\n            children: chat.username\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: selectedChat.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [msg && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 31\n            }, this), msg.timestamp && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timestamp\",\n              children: msg.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 25\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            className: \"input-with-emoji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stickerIcon,\n            alt: \"\\u0421\\u0442\\u0438\\u043A\\u0435\\u0440\\u044B\",\n            className: \"emoji-button\",\n            onClick: () => setShowEmojiPicker(!showEmojiPicker)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sendIcon,\n            alt: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\",\n            className: \"send-button\",\n            onClick: handleSend\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emoji-picker\",\n            children: ['😊', '😂', '😍', '😎'].map((emoji, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setInputValue(inputValue + emoji),\n              children: emoji\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 27\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"gafuJDJM32dQMXpqMWpDyTp8Yr0=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","messageIcon","closeIcon","backArrow","sendIcon","searchIcon","clipIcon","stickerIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","isOpen","setIsOpen","closing","setClosing","messages","setMessages","inputValue","setInputValue","file","setFile","showEmojiPicker","setShowEmojiPicker","ws","setWs","error","setError","isAuthenticated","setIsAuthenticated","isRegistering","setIsRegistering","username","setUsername","password","setPassword","chats","setChats","searchQuery","setSearchQuery","selectedChat","setSelectedChat","console","log","Date","toLocaleTimeString","hour","minute","second","socket","WebSocket","onopen","onmessage","event","data","JSON","parse","onerror","onclose","close","handleSend","trim","timestamp","waitForConnection","Promise","resolve","reject","then","connectedSocket","messageData","stringify","text","URL","createObjectURL","send","type","catch","prevMessages","message","handleLogin","response","post","success","handleRegister","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","src","alt","filter","chat","toLowerCase","includes","map","index","msg","emoji","_c","$RefreshReg$"],"sources":["/home/plotvichka_2/bsu/3_course/TP/Online-market/react-project/market/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Chat.css';\nimport './ChatAuth.css'\nimport './Error.css'\nimport axios from 'axios'\nimport messageIcon from './chatIcons/ChatIcon.svg';\nimport closeIcon from './chatIcons/CloseIcon.svg';\nimport backArrow from './chatIcons/BackArrow.png'\nimport sendIcon from './chatIcons/SendIcon.svg';\nimport searchIcon from './chatIcons/SearchIcon.svg';\nimport clipIcon from './chatIcons/ClipIcon.svg';\nimport stickerIcon from './chatIcons/StickerIcon.svg';\n\nconst Chat = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [closing, setClosing] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [file, setFile] = useState(null);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [ws, setWs] = useState(null);\n\n  const [error, setError] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Authentication state\n  const [isRegistering, setIsRegistering] = useState(false); // Registration state\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [chats, setChats] = useState([]); // Все чаты\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Запрос поиска\n  const [selectedChat, setSelectedChat] = useState(null); // Текущий выбранный чат\n\n\n  useEffect(() => {\n    console.log(\"using useEffect\")\n    console.log(new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit'}));\n    const socket = new WebSocket(`ws://localhost:8000/ws/chats/${username}/`);\n    socket.onopen = () => console.log('WebSocket connected');\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      console.log(data)\n      // setMessages((prev) => [...prev, data]);\n      // setMessages([data])\n    };\n    socket.onerror = (error) => console.error('WebSocket Error:', error);\n    socket.onclose = () => console.log('WebSocket connection closed');\n    setWs(socket);\n\n    return () => {\n      socket.close();\n    };\n  }, [username]);\n\n    // const handleSend = () => {\n    //   if (inputValue.trim() || file) {\n    //     console.log(\"sending message..\")\n    //     const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    //     const socket = new WebSocket(`ws://localhost:8000/ws/chats/${username}/${selectedChat.username}/`);\n    //     socket.onopen = () => {\n    //       console.log('WebSocket connected');\n    //       console.log(\"before send\")\n    //       ws.send(JSON.stringify({ text: inputValue, file: file ? URL.createObjectURL(file) : null, timestamp }));\n    //       console.log(\"after send\")\n    //     }\n    //     socket.onmessage = (event) => {\n    //       const data = JSON.parse(event.data);\n    //       selectedChat.messages = [selectedChat.messages, data.message]\n    //       console.log(selectedChat)\n    //       // setMessages((prev) => [...prev, data]);\n    //       // setMessages([data])\n    //     };\n    //     socket.onerror = (error) => console.error('WebSocket Error:', error);\n    //     socket.onclose = () => console.log('WebSocket connection closed');\n    //     setWs(socket)\n    //   // return () => {\n    //   //   socket.close();\n    //   // };\n    //   //   if (ws) {\n    //   //     ws.send(JSON.stringify({ text: inputValue, file: file ? URL.createObjectURL(file) : null, timestamp }));\n    //   //   }\n    //     setMessages([...messages, { text: inputValue, file, type: 'sent', timestamp }]);\n    //     setInputValue('');\n    //     setFile(null);\n    //     console.log(\"end sending...\")\n    //   }\n    // };\n\n  const handleSend = () => {\n  if (inputValue.trim() || file) {\n    console.log(\"Initializing WebSocket...\");\n    const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    const socket = new WebSocket(`ws://localhost:8000/ws/chats/${username}/${selectedChat.username}/`);\n\n    // Создаем Promise для ожидания успешного подключения WebSocket\n    const waitForConnection = new Promise((resolve, reject) => {\n      socket.onopen = () => {\n        console.log('WebSocket connected');\n        resolve(socket);\n      };\n      socket.onerror = (error) => {\n        console.error('WebSocket Error:', error);\n        reject(error);\n      };\n    });\n\n    waitForConnection\n      .then((connectedSocket) => {\n        console.log(\"WebSocket ready to send message\");\n        const messageData = JSON.stringify({\n          text: inputValue,\n          file: file ? URL.createObjectURL(file) : null,\n          timestamp,\n        });\n\n        connectedSocket.send(messageData);\n        console.log(\"Message sent:\", messageData);\n\n        // Сохраняем WebSocket в состоянии, чтобы поддерживать связь\n        setWs(connectedSocket);\n\n        // Обновляем список сообщений\n        setMessages([...messages, { text: inputValue, file, type: 'sent', timestamp }]);\n        setInputValue('');\n        setFile(null);\n      })\n      .catch((error) => {\n        console.error(\"Failed to establish WebSocket connection:\", error);\n      });\n\n    // Обработка сообщений и закрытия WebSocket\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      console.log(\"Message received:\", data);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { text: data.message, type: 'received', timestamp: data.timestamp },\n      ]);\n    };\n\n    socket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n  }\n};\n\n\n  const handleLogin = async () => {\n  if (username && password) {\n    // setIsAuthenticated(true);\n    try {\n      let response = await axios.post('http://localhost:8000/chat/login/', { username, password });\n      if (response.data.success) {\n        setIsAuthenticated(true);\n        response = await axios.post('http://localhost:8000/chat/load/', { username });\n        console.log(response)\n        console.log(response.data)\n\n        // console.log(response.data.alina)\n        setChats(response.data)\n      } else {\n        setError('Неверный логин или пароль');\n      }\n    } catch (error) {\n      setError('Ошибка при авторизации');\n    }\n  } else {\n    setError('Введите корректные данные для входа.');\n  }\n};\n\n\n  const handleRegister = () => {\n    // Mock registration logic; replace with API call if needed\n    if (username && password) {\n      alert('Пользователь зарегистрирован!');\n      setIsRegistering(false);\n    } else {\n      alert('Введите корректные данные для регистрации.');\n    }\n  };\n\n  if (!isAuthenticated) {\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-box\">\n        <h2>{isRegistering ? 'Регистрация' : 'Вход'}</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Логин\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          className=\"auth-input\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Пароль\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"auth-input\"\n        />\n        <button onClick={isRegistering ? handleRegister : handleLogin} className=\"auth-button\">\n          {isRegistering ? 'Зарегистрироваться' : 'Войти'}\n        </button>\n        <button onClick={() => setIsRegistering(!isRegistering)} className=\"toggle-button\">\n          {isRegistering ? 'Уже есть аккаунт? Войти' : 'Нет аккаунта? Зарегистрироваться'}\n        </button>\n\n        {/* Отображение ошибки */}\n        {error && (\n  <div className=\"auth-error\">\n    <img src=\"/path/to/error-icon.svg\" alt=\"Error\" className=\"error-icon\" />\n    <span>{error}</span>\n  </div>\n)}\n      </div>\n    </div>\n  );\n}\n\n\n\n  return (\n    <div>\n      {!isOpen ? (\n        <div className=\"chat-container\" onClick={() => setIsOpen(true)}>\n          <div className=\"input-container\">\n            Появились вопросы? Пишите нам!\n            <div className=\"icon-container\">\n              <img src={messageIcon} alt=\"Message icon\" className=\"icon\" />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className={`chat-window ${isOpen ? 'open' : 'close'}`}>\n          <div className=\"chat-header\">\n            {selectedChat ? (\n                <>\n                  {/*<button*/}\n                  {/*    className=\"back-button\"*/}\n                  {/*    onClick={() => setSelectedChat(null)}*/}\n                  {/*>*/}\n                  {/*  ← Назад*/}\n                  {/*</button>*/}\n                  <img\n                      src={backArrow}\n                      alt=\"Назад\"\n                      className=\"icon\"\n                      onClick={() => setSelectedChat(null)}\n                  />\n                  <span>Чат с {selectedChat.username}</span>\n                </>\n            ) : (\n                <span>Ваши чаты</span>\n            )}\n            <img\n                src={closeIcon}\n                alt=\"Close chat\"\n                className=\"icon\"\n              onClick={() => setIsOpen(false)}\n            />\n          </div>\n\n          {!selectedChat ? (\n            <>\n              {/* Поле поиска */}\n              <div className=\"search-field\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Поиск чатов...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"search-input\"\n                />\n              </div>\n\n              {/* Список чатов */}\n              <div className=\"chat-list\">\n                {chats\n                  .filter((chat) =>\n                    chat.username\n                      .toLowerCase()\n                      .includes(searchQuery.toLowerCase())\n                  )\n                  .map((chat, index) => (\n                    <div\n                      key={index}\n                      className=\"chat-item\"\n                      onClick={() => {\n                          console.log(chat);\n                          console.log(\"aaaaaaaaaaaaaaaaaaa\")\n                          setSelectedChat(chat);}}\n                    >\n                      {chat.username}\n                    </div>\n                  ))}\n              </div>\n            </>\n          ) : (\n            <>\n              {/* Переписка с выбранным собеседником */}\n              <div className=\"chat-body\">\n                {selectedChat.messages\n                  .map((msg, index) => (\n                    <div\n                      key={index}\n                      // className={`message-bubble ${\n                      //   msg.type === 'sent' ? 'sent' : 'received'\n                      // }`}\n                    >\n                      {msg && <p>{msg}</p>}\n                      {msg.timestamp && (\n                        <span className=\"timestamp\">{msg.timestamp}</span>\n                      )}\n                    </div>\n                  ))}\n              </div>\n\n              {/* Поле ввода сообщения */}\n              <div className=\"chat-input\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Введите сообщение\"\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    className=\"input-with-emoji\"\n                />\n                <img\n                    src={stickerIcon}\n                    alt=\"Стикеры\"\n                    className=\"emoji-button\"\n                    onClick={() => setShowEmojiPicker(!showEmojiPicker)}\n                />\n                {/*<button*/}\n                {/*    className=\"emoji-button\"*/}\n                {/*    onClick={() => setShowEmojiPicker(!showEmojiPicker)}*/}\n                {/*>*/}\n                {/*  😊*/}\n                {/*</button>*/}\n                {/*<button className=\"send-button\" onClick={handleSend}>*/}\n                {/*  Отправить*/}\n                {/*</button>*/}\n                <img\n                    src={sendIcon}\n                    alt=\"Отправить\"\n                    className=\"send-button\"\n                    onClick={handleSend}\n                />\n                {showEmojiPicker && (\n                    <div className=\"emoji-picker\">\n                      {['😊', '😂', '😍', '😎'].map((emoji, index) => (\n                          <button\n                              key={index}\n                              onClick={() => setInputValue(inputValue + emoji)}\n                          >\n                            {emoji}\n                          </button>\n                      ))}\n                    </div>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}