{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./Chat.css';import messageIcon from'./chatIcons/ChatIcon.svg';import closeIcon from'./chatIcons/CloseIcon.svg';import sendIcon from'./chatIcons/SendIcon.svg';import searchIcon from'./chatIcons/SearchIcon.svg';import clipIcon from'./chatIcons/ClipIcon.svg';import StickerIcon from'./chatIcons/StickerIcon.svg';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=()=>{const[isOpen,setIsOpen]=useState(false);const[closing,setClosing]=useState(false);const[messages,setMessages]=useState([]);const[inputValue,setInputValue]=useState('');const[file,setFile]=useState(null);const[showEmojiPicker,setShowEmojiPicker]=useState(false);// State for emoji picker\nconst[ws,setWs]=useState(null);// WebSocket state\n// Initialize WebSocket when component mounts\nuseEffect(()=>{const socket=new WebSocket('ws://localhost:8000/ws/chat/');// Replace with your WebSocket URL\nsocket.onopen=()=>{console.log('WebSocket connected');};socket.onmessage=event=>{const data=JSON.parse(event.data);console.log('Message received from server:',data);// Log received data\n// If the message is \"Привет\", treat it as a special message\nif(data.message&&data.message===\"Привет\"){setMessages(prev=>[...prev,{text:data.message,type:'received',timestamp:data.timestamp}]);}else{setMessages(prev=>[...prev,data]);// Add other messages\n}};socket.onerror=error=>{console.error('WebSocket Error:',error);};socket.onclose=()=>{console.log('WebSocket connection closed');};setWs(socket);// Cleanup WebSocket connection when component unmounts\nreturn()=>{socket.close();};},[]);// Empty dependency array to only run once on mount\n// Toggle chat window visibility\nconst toggleChat=()=>{if(isOpen){setClosing(true);setTimeout(()=>{setIsOpen(false);setClosing(false);},400);}else{setIsOpen(true);}};// Handle sending message\nconst handleSend=()=>{if(inputValue.trim()||file){const timestamp=new Date().toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'});// Send message via WebSocket if connection is open\nif(ws){ws.send(JSON.stringify({message:inputValue,file:file?URL.createObjectURL(file):null,// Add file if present\ntimestamp}));}// Add the sent message to the chat UI\nsetMessages([...messages,{text:inputValue,file,type:'sent',timestamp}]);setInputValue('');// Clear input field\nsetFile(null);// Clear file input\n}};// Handle file input change\nconst handleFileChange=event=>{setFile(event.target.files[0]);};// Toggle emoji picker visibility\nconst toggleEmojiPicker=()=>{setShowEmojiPicker(!showEmojiPicker);};// Handle emoji selection\nconst handleEmojiSelect=emoji=>{setInputValue(inputValue+emoji);// Add emoji to input field\nsetShowEmojiPicker(false);// Close emoji picker\n};// List of emojis\nconst emojis=['😊','😂','😢','😍','😎','😜','😇'];return/*#__PURE__*/_jsx(\"div\",{children:!isOpen&&!closing?/*#__PURE__*/_jsx(\"div\",{className:\"chat-container\",onClick:toggleChat,children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[\"\\u041F\\u043E\\u044F\\u0432\\u0438\\u043B\\u0438\\u0441\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B? \\u041F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u043D\\u0430\\u043C!\",/*#__PURE__*/_jsx(\"div\",{className:\"icon-container\",children:/*#__PURE__*/_jsx(\"img\",{src:messageIcon,alt:\"Message icon\",className:\"icon\"})})]})}):/*#__PURE__*/_jsxs(\"div\",{className:`chat-window ${isOpen&&!closing?'open':'close'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:searchIcon,alt:\"Search icon\",className:\"icon\"}),\"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",/*#__PURE__*/_jsx(\"img\",{src:closeIcon,alt:\"Close chat\",className:\"icon\",onClick:toggleChat})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-body\",children:messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`message-bubble ${msg.type==='sent'?'sent':'received'}`,children:[msg.text&&/*#__PURE__*/_jsx(\"p\",{children:msg.text}),msg.file&&/*#__PURE__*/_jsxs(\"div\",{className:\"file-attachment\",children:[\"\\uD83D\\uDCCE \",/*#__PURE__*/_jsx(\"a\",{href:msg.file,target:\"_blank\",rel:\"noopener noreferrer\",children:msg.file})]}),msg.timestamp&&/*#__PURE__*/_jsx(\"span\",{className:\"timestamp\",children:msg.timestamp})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-input\",children:/*#__PURE__*/_jsx(\"img\",{src:clipIcon,alt:\"Attach icon\",className:\"clip-icon\"})}),/*#__PURE__*/_jsx(\"input\",{id:\"file-input\",type:\"file\",onChange:handleFileChange,style:{display:'none'}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",className:\"input-with-emoji\",value:inputValue,onChange:e=>setInputValue(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"emoji-button\",onClick:toggleEmojiPicker,children:/*#__PURE__*/_jsx(\"img\",{src:StickerIcon,alt:\"Emoji icon\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"send-button\",onClick:handleSend,children:/*#__PURE__*/_jsx(\"img\",{src:sendIcon,alt:\"Send icon\"})}),showEmojiPicker&&/*#__PURE__*/_jsx(\"div\",{className:\"emoji-picker\",children:emojis.map((emoji,index)=>/*#__PURE__*/_jsx(\"button\",{className:\"emoji\",onClick:()=>handleEmojiSelect(emoji),children:emoji},index))})]})]})});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","messageIcon","closeIcon","sendIcon","searchIcon","clipIcon","StickerIcon","jsx","_jsx","jsxs","_jsxs","Chat","isOpen","setIsOpen","closing","setClosing","messages","setMessages","inputValue","setInputValue","file","setFile","showEmojiPicker","setShowEmojiPicker","ws","setWs","socket","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","message","prev","text","type","timestamp","onerror","error","onclose","close","toggleChat","setTimeout","handleSend","trim","Date","toLocaleTimeString","hour","minute","send","stringify","URL","createObjectURL","handleFileChange","target","files","toggleEmojiPicker","handleEmojiSelect","emoji","emojis","children","className","onClick","src","alt","map","msg","index","href","rel","htmlFor","id","onChange","style","display","placeholder","value","e"],"sources":["/home/plotvichka_2/bsu/3_course/TP/Online-market/react-project/market/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Chat.css';\nimport messageIcon from './chatIcons/ChatIcon.svg';\nimport closeIcon from './chatIcons/CloseIcon.svg';\nimport sendIcon from './chatIcons/SendIcon.svg';\nimport searchIcon from './chatIcons/SearchIcon.svg';\nimport clipIcon from './chatIcons/ClipIcon.svg';\nimport StickerIcon from './chatIcons/StickerIcon.svg';\n\nconst Chat = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [closing, setClosing] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [file, setFile] = useState(null);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false); // State for emoji picker\n  const [ws, setWs] = useState(null); // WebSocket state\n\n  // Initialize WebSocket when component mounts\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:8000/ws/chat/'); // Replace with your WebSocket URL\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n    };\n\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      console.log('Message received from server:', data); // Log received data\n\n      // If the message is \"Привет\", treat it as a special message\n      if (data.message && data.message === \"Привет\") {\n        setMessages((prev) => [\n          ...prev,\n          { text: data.message, type: 'received', timestamp: data.timestamp }\n        ]);\n      } else {\n        setMessages((prev) => [...prev, data]); // Add other messages\n      }\n    };\n\n    socket.onerror = (error) => {\n      console.error('WebSocket Error:', error);\n    };\n\n    socket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n\n    setWs(socket);\n\n    // Cleanup WebSocket connection when component unmounts\n    return () => {\n      socket.close();\n    };\n  }, []); // Empty dependency array to only run once on mount\n\n  // Toggle chat window visibility\n  const toggleChat = () => {\n    if (isOpen) {\n      setClosing(true);\n      setTimeout(() => {\n        setIsOpen(false);\n        setClosing(false);\n      }, 400);\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  // Handle sending message\n  const handleSend = () => {\n    if (inputValue.trim() || file) {\n      const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n      // Send message via WebSocket if connection is open\n      if (ws) {\n        ws.send(\n          JSON.stringify({\n            message: inputValue,\n            file: file ? URL.createObjectURL(file) : null, // Add file if present\n            timestamp,\n          })\n        );\n      }\n\n      // Add the sent message to the chat UI\n      setMessages([\n        ...messages,\n        { text: inputValue, file, type: 'sent', timestamp },\n      ]);\n      setInputValue(''); // Clear input field\n      setFile(null); // Clear file input\n    }\n  };\n\n  // Handle file input change\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  // Toggle emoji picker visibility\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  // Handle emoji selection\n  const handleEmojiSelect = (emoji) => {\n    setInputValue(inputValue + emoji); // Add emoji to input field\n    setShowEmojiPicker(false); // Close emoji picker\n  };\n\n  // List of emojis\n  const emojis = ['😊', '😂', '😢', '😍', '😎', '😜', '😇'];\n\n  return (\n    <div>\n      {!isOpen && !closing ? (\n        <div className=\"chat-container\" onClick={toggleChat}>\n          <div className=\"input-container\">\n            Появились вопросы? Пишите нам!\n            <div className=\"icon-container\">\n              <img src={messageIcon} alt=\"Message icon\" className=\"icon\" />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className={`chat-window ${isOpen && !closing ? 'open' : 'close'}`}>\n          <div className=\"chat-header\">\n            <img src={searchIcon} alt=\"Search icon\" className=\"icon\" />\n            Напишите ваше сообщение\n            <img src={closeIcon} alt=\"Close chat\" className=\"icon\" onClick={toggleChat} />\n          </div>\n          <div className=\"chat-body\">\n            {messages.map((msg, index) => (\n              <div\n                key={index}\n                className={`message-bubble ${msg.type === 'sent' ? 'sent' : 'received'}`}\n              >\n                {msg.text && <p>{msg.text}</p>}\n                {msg.file && (\n                  <div className=\"file-attachment\">\n                    📎 <a href={msg.file} target=\"_blank\" rel=\"noopener noreferrer\">{msg.file}</a>\n                  </div>\n                )}\n                {msg.timestamp && <span className=\"timestamp\">{msg.timestamp}</span>}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"chat-input\">\n            <label htmlFor=\"file-input\">\n              <img src={clipIcon} alt=\"Attach icon\" className=\"clip-icon\" />\n            </label>\n            <input\n              id=\"file-input\"\n              type=\"file\"\n              onChange={handleFileChange}\n              style={{ display: 'none' }}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Введите сообщение\"\n              className=\"input-with-emoji\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n            />\n            <button className=\"emoji-button\" onClick={toggleEmojiPicker}>\n              <img src={StickerIcon} alt=\"Emoji icon\" />\n            </button>\n            <button className=\"send-button\" onClick={handleSend}>\n              <img src={sendIcon} alt=\"Send icon\" />\n            </button>\n\n            {showEmojiPicker && (\n              <div className=\"emoji-picker\">\n                {emojis.map((emoji, index) => (\n                  <button\n                    key={index}\n                    className=\"emoji\"\n                    onClick={() => handleEmojiSelect(emoji)}\n                  >\n                    {emoji}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}