{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\to be continued\\\\fe\\\\Online-market\\\\react-project\\\\market\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Chat.css';\nimport './ChatAuth.css';\nimport './Error.css';\nimport axios from 'axios';\nimport messageIcon from './chatIcons/ChatIcon.svg';\nimport closeIcon from './chatIcons/CloseIcon.svg';\nimport backArrow from './chatIcons/BackArrow.png';\nimport sendIcon from './chatIcons/SendIcon.svg';\nimport searchIcon from './chatIcons/SearchIcon.svg';\nimport clipIcon from './chatIcons/ClipIcon.svg';\nimport stickerIcon from './chatIcons/StickerIcon.svg';\nimport plusIcon from './chatIcons/PlusIcon1.png'; // Add a plus icon for creating new chats\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [file, setFile] = useState(null);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [ws, setWs] = useState(null);\n  const [error, setError] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Authentication state\n  const [isRegistering, setIsRegistering] = useState(false); // Registration state\n  const [fromUser, setFromUser] = useState('');\n  const [toUser, setToUser] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [password, setPassword] = useState('');\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Search query\n  const [conversations, setConversations] = useState([]);\n  const [showNewChatInput, setShowNewChatInput] = useState(false); // Control visibility of input field\n  const [newChatUsername, setNewChatUsername] = useState(''); // Store new chat username\n\n  // Fetch conversations after login\n  const loadConversations = async () => {\n    const response = await axios.post('http://25.43.123.165:8000/chat/load/conversations/', {\n      fromUser\n    });\n    console.log(\"LOAD CONVERSATIONS\");\n    // console.log(\"add\")\n    console.log(response);\n    setConversations(response.data);\n  };\n  const handleNewChatSubmit = async () => {\n    if (newChatUsername) {\n      try {\n        const response = await axios.post('http://25.43.123.165:8000/chat/create_conversation/', {\n          newChatUsername\n        });\n        if (response.data.success) {\n          console.log(\"success\");\n          setToUser(newChatUsername);\n          const usernameExists = conversations.some(convo => convo.username === newChatUsername);\n          if (!usernameExists) {\n            // Если нет, добавляем новый объект с username в начало массива\n            setConversations([{\n              username: newChatUsername\n            }, ...conversations]);\n          }\n          handleClickOnChat(newChatUsername);\n          setShowNewChatInput(false);\n        } else {\n          console.log(\"not success\");\n          setError('Пользователь не найден');\n        }\n      } catch (error) {\n        setError('Ошибка при создании чата');\n      }\n    }\n  };\n  const handleSend = () => {\n    if (inputValue.trim() || file) {\n      const timestamp = new Date().toISOString();\n      const messageData = JSON.stringify({\n        text: inputValue,\n        file: file ? URL.createObjectURL(file) : null,\n        timestamp\n      });\n      ws.send(messageData);\n      console.log(\"Message sent:\", messageData);\n\n      // setMessages([...messages, { text: inputValue, file, type: 'sent', timestamp }]);\n      setInputValue('');\n      setFile(null);\n    }\n  };\n  const handleClickOnChat = async toUser => {\n    const response = await axios.post('http://25.43.123.165:8000/chat/load/messages/', {\n      fromUser,\n      toUser\n    });\n    setMessages(response.data);\n    const socket = new WebSocket(`ws://25.43.123.165:8000/ws/chats/${fromUser}/${toUser}/`);\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n    };\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      // console.log(\"onmessage trigger\")\n      // console.log(fromUser, data.type)\n      // data.type = fromUser === data.type ? 'sent' : 'received';\n      setMessages(prevMessages => [...prevMessages, data]);\n    };\n    socket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    setWs(socket);\n  };\n  const handleRegister = () => {\n    // Mock registration logic; replace with API call if needed\n    if (fromUser && password) {\n      alert('Пользователь зарегистрирован!');\n      setIsRegistering(false);\n    } else {\n      alert('Введите корректные данные для регистрации.');\n    }\n  };\n  const handleLogin = async () => {\n    if (fromUser && password) {\n      try {\n        let response = await axios.post('http://25.43.123.165:8000/chat/login/', {\n          fromUser,\n          password\n        });\n        if (response.data.success) {\n          setIsAuthenticated(true);\n          loadConversations();\n        } else {\n          setError('Неверный логин или пароль');\n        }\n      } catch (error) {\n        setError('Ошибка при авторизации');\n      }\n    } else {\n      setError('Введите корректные данные для входа.');\n    }\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isRegistering ? 'Регистрация' : 'Вход'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n          value: fromUser,\n          onChange: e => setFromUser(e.target.value),\n          className: \"auth-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"auth-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isRegistering ? handleRegister : handleLogin,\n          className: \"auth-button\",\n          children: isRegistering ? 'Зарегистрироваться' : 'Войти'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRegistering(!isRegistering),\n          className: \"toggle-button\",\n          children: isRegistering ? 'Уже есть аккаунт? Войти' : 'Нет аккаунта? Зарегистрироваться'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/path/to/error-icon.svg\",\n            alt: \"Error\",\n            className: \"error-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      onClick: () => setIsOpen(true),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        onClick: () => loadConversations(),\n        children: [\"\\u041F\\u043E\\u044F\\u0432\\u0438\\u043B\\u0438\\u0441\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B? \\u041F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u043D\\u0430\\u043C!\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: messageIcon,\n            alt: \"Message icon\",\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-window ${isOpen ? 'open' : 'close'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [toUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: backArrow,\n            alt: \"\\u041D\\u0430\\u0437\\u0430\\u0434\",\n            className: \"icon\",\n            onClick: () => {\n              ws.close();\n              setWs(null);\n              setToUser(null);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u0427\\u0430\\u0442 \\u0441 \", toUser]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0412\\u0430\\u0448\\u0438 \\u0447\\u0430\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: closeIcon,\n          alt: \"Close chat\",\n          className: \"icon\",\n          onClick: () => setIsOpen(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), !toUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-field\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u0447\\u0430\\u0442\\u043E\\u0432...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-list\",\n          children: conversations.filter(conversation => conversation.username.toLowerCase().includes(searchQuery.toLowerCase())).map((conversation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-item\",\n            onClick: () => {\n              setToUser(conversation.username);\n              handleClickOnChat(conversation.username);\n            },\n            children: conversation.username\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-chat-button\",\n          onClick: () => setShowNewChatInput(true),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: plusIcon,\n            alt: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0447\\u0430\\u0442\",\n            className: \"add-chat-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this), showNewChatInput && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n            value: newChatUsername,\n            onChange: e => setNewChatUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNewChatSubmit,\n            children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0447\\u0430\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowNewChatInput(false),\n            children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-bubble ${msg.type === 'sent' ? 'sent' : 'received'}`,\n            children: [msg.text && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 34\n            }, this), msg.timestamp && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timestamp\",\n              children: new Date(msg.timestamp).toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            className: \"input-with-emoji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stickerIcon,\n            alt: \"\\u0421\\u0442\\u0438\\u043A\\u0435\\u0440\\u044B\",\n            className: \"emoji-button\",\n            onClick: () => setShowEmojiPicker(!showEmojiPicker)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sendIcon,\n            alt: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\",\n            className: \"send-button\",\n            onClick: handleSend\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emoji-picker\",\n            children: ['😊', '😂', '😍', '😎'].map((emoji, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setInputValue(inputValue + emoji),\n              children: emoji\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"b2wr6vxkVGNz35k4715Gjd+7bJA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","messageIcon","closeIcon","backArrow","sendIcon","searchIcon","clipIcon","stickerIcon","plusIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","isOpen","setIsOpen","inputValue","setInputValue","file","setFile","showEmojiPicker","setShowEmojiPicker","ws","setWs","error","setError","isAuthenticated","setIsAuthenticated","isRegistering","setIsRegistering","fromUser","setFromUser","toUser","setToUser","messages","setMessages","password","setPassword","searchQuery","setSearchQuery","conversations","setConversations","showNewChatInput","setShowNewChatInput","newChatUsername","setNewChatUsername","loadConversations","response","post","console","log","data","handleNewChatSubmit","success","usernameExists","some","convo","username","handleClickOnChat","handleSend","trim","timestamp","Date","toISOString","messageData","JSON","stringify","text","URL","createObjectURL","send","socket","WebSocket","onopen","onmessage","event","parse","prevMessages","onclose","handleRegister","alert","handleLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","src","alt","close","filter","conversation","toLowerCase","includes","map","index","msg","toLocaleTimeString","hour","minute","emoji","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/to be continued/fe/Online-market/react-project/market/src/components/Chat.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport './Chat.css';\nimport './ChatAuth.css';\nimport './Error.css';\nimport axios from 'axios';\nimport messageIcon from './chatIcons/ChatIcon.svg';\nimport closeIcon from './chatIcons/CloseIcon.svg';\nimport backArrow from './chatIcons/BackArrow.png';\nimport sendIcon from './chatIcons/SendIcon.svg';\nimport searchIcon from './chatIcons/SearchIcon.svg';\nimport clipIcon from './chatIcons/ClipIcon.svg';\nimport stickerIcon from './chatIcons/StickerIcon.svg';\nimport plusIcon from './chatIcons/PlusIcon1.png'; // Add a plus icon for creating new chats\n\nconst Chat = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [file, setFile] = useState(null);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [ws, setWs] = useState(null);\n  const [error, setError] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Authentication state\n  const [isRegistering, setIsRegistering] = useState(false); // Registration state\n  const [fromUser, setFromUser] = useState('');\n  const [toUser, setToUser] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [password, setPassword] = useState('');\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Search query\n  const [conversations, setConversations] = useState([]);\n  const [showNewChatInput, setShowNewChatInput] = useState(false); // Control visibility of input field\n  const [newChatUsername, setNewChatUsername] = useState(''); // Store new chat username\n\n  // Fetch conversations after login\n  const loadConversations = async () => {\n    const response = await axios.post('http://25.43.123.165:8000/chat/load/conversations/', { fromUser });\n    console.log(\"LOAD CONVERSATIONS\")\n    // console.log(\"add\")\n    console.log(response)\n    setConversations(response.data);\n  };\n\n  const handleNewChatSubmit = async () => {\n    if (newChatUsername) {\n      try {\n        const response = await axios.post('http://25.43.123.165:8000/chat/create_conversation/', { newChatUsername });\n        if (response.data.success) {\n          console.log(\"success\")\n          setToUser(newChatUsername);\n          const usernameExists = conversations.some(convo => convo.username === newChatUsername);\n\n          if (!usernameExists) {\n            // Если нет, добавляем новый объект с username в начало массива\n            setConversations([{ username: newChatUsername }, ...conversations]);\n          }\n          handleClickOnChat(newChatUsername);\n          setShowNewChatInput(false);\n        } else {\n          console.log(\"not success\")\n          setError('Пользователь не найден');\n        }\n      } catch (error) {\n        setError('Ошибка при создании чата');\n      }\n    }\n  };\n\n    const handleSend = () => {\n  if (inputValue.trim() || file) {\n    const timestamp = new Date().toISOString();\n      const messageData = JSON.stringify({\n              text: inputValue,\n              file: file ? URL.createObjectURL(file) : null,\n              timestamp,\n            });\n\n            ws.send(messageData);\n            console.log(\"Message sent:\", messageData);\n\n            // setMessages([...messages, { text: inputValue, file, type: 'sent', timestamp }]);\n            setInputValue('');\n            setFile(null);\n  }\n};\n  const handleClickOnChat = async (toUser) => {\n    const response = await axios.post('http://25.43.123.165:8000/chat/load/messages/', { fromUser, toUser });\n    setMessages(response.data);\n    const socket = new WebSocket(`ws://25.43.123.165:8000/ws/chats/${fromUser}/${toUser}/`);\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n    };\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      // console.log(\"onmessage trigger\")\n      // console.log(fromUser, data.type)\n      // data.type = fromUser === data.type ? 'sent' : 'received';\n      setMessages((prevMessages) => [...prevMessages, data]);\n    };\n    socket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    setWs(socket);\n  };\n\n    const handleRegister = () => {\n    // Mock registration logic; replace with API call if needed\n    if (fromUser && password) {\n      alert('Пользователь зарегистрирован!');\n      setIsRegistering(false);\n    } else {\n      alert('Введите корректные данные для регистрации.');\n    }\n  };\n\n  const handleLogin = async () => {\n    if (fromUser && password) {\n      try {\n        let response = await axios.post('http://25.43.123.165:8000/chat/login/', { fromUser, password });\n        if (response.data.success) {\n          setIsAuthenticated(true);\n          loadConversations();\n        } else {\n          setError('Неверный логин или пароль');\n        }\n      } catch (error) {\n        setError('Ошибка при авторизации');\n      }\n    } else {\n      setError('Введите корректные данные для входа.');\n    }\n  };\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"auth-container\">\n        <div className=\"auth-box\">\n          <h2>{isRegistering ? 'Регистрация' : 'Вход'}</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Логин\"\n            value={fromUser}\n            onChange={(e) => setFromUser(e.target.value)}\n            className=\"auth-input\"\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Пароль\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"auth-input\"\n          />\n          <button onClick={isRegistering ? handleRegister : handleLogin} className=\"auth-button\">\n            {isRegistering ? 'Зарегистрироваться' : 'Войти'}\n          </button>\n          <button onClick={() => setIsRegistering(!isRegistering)} className=\"toggle-button\">\n            {isRegistering ? 'Уже есть аккаунт? Войти' : 'Нет аккаунта? Зарегистрироваться'}\n          </button>\n          {error && (\n            <div className=\"auth-error\">\n              <img src=\"/path/to/error-icon.svg\" alt=\"Error\" className=\"error-icon\" />\n              <span>{error}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {!isOpen ? (\n        <div className=\"chat-container\" onClick={() => setIsOpen(true)}>\n          <div className=\"input-container\" onClick={() => loadConversations()}>\n            Появились вопросы? Пишите нам!\n            <div className=\"icon-container\">\n              <img src={messageIcon} alt=\"Message icon\" className=\"icon\" />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className={`chat-window ${isOpen ? 'open' : 'close'}`}>\n          <div className=\"chat-header\">\n            {toUser ? (\n              <>\n                <img\n                  src={backArrow}\n                  alt=\"Назад\"\n                  className=\"icon\"\n                  onClick={() => {\n                    ws.close();\n                    setWs(null);\n                    setToUser(null);\n                  }}\n                />\n                <span>Чат с {toUser}</span>\n              </>\n            ) : (\n              <span>Ваши чаты</span>\n            )}\n            <img\n              src={closeIcon}\n              alt=\"Close chat\"\n              className=\"icon\"\n              onClick={() => setIsOpen(false)}\n            />\n          </div>\n\n          {!toUser ? (\n            <>\n              <div className=\"search-field\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Поиск чатов...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"search-input\"\n                />\n              </div>\n\n              <div className=\"chat-list\">\n                {conversations\n                  .filter((conversation) =>\n                    conversation.username.toLowerCase().includes(searchQuery.toLowerCase())\n                  )\n                  .map((conversation, index) => (\n                    <div\n                      key={index}\n                      className=\"chat-item\"\n                      onClick={() => {\n                        setToUser(conversation.username);\n                        handleClickOnChat(conversation.username);\n                      }}\n                    >\n                      {conversation.username}\n                    </div>\n                  ))}\n              </div>\n\n              <div className=\"new-chat-button\" onClick={() => setShowNewChatInput(true)}>\n                <img\n                    src={plusIcon}\n                    alt=\"Добавить чат\"\n                    className=\"add-chat-button\"\n                />\n              </div>\n\n              {showNewChatInput && (\n                  <div className=\"new-chat-input\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Введите имя пользователя\"\n                    value={newChatUsername}\n                    onChange={(e) => setNewChatUsername(e.target.value)}\n                  />\n                  <button onClick={handleNewChatSubmit}>Создать чат</button>\n                  <button onClick={() => setShowNewChatInput(false)}>Отменить</button>\n                </div>\n              )}\n            </>\n          ) : (\n            <>\n              <div className=\"chat-body\">\n                {messages.map((msg, index) => (\n                  <div key={index} className={`message-bubble ${msg.type === 'sent' ? 'sent' : 'received'}`}>\n                    {msg.text && <p>{msg.text}</p>}\n                    {msg.timestamp && (\n                      <span className=\"timestamp\">{new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\n                    )}\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"chat-input\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Введите сообщение\"\n                  value={inputValue}\n                  onChange={(e) => setInputValue(e.target.value)}\n                  className=\"input-with-emoji\"\n                />\n                <img\n                  src={stickerIcon}\n                  alt=\"Стикеры\"\n                  className=\"emoji-button\"\n                  onClick={() => setShowEmojiPicker(!showEmojiPicker)}\n                />\n                <img\n                  src={sendIcon}\n                  alt=\"Отправить\"\n                  className=\"send-button\"\n                  onClick={handleSend}\n                />\n                {showEmojiPicker && (\n                  <div className=\"emoji-picker\">\n                    {['😊', '😂', '😍', '😎'].map((emoji, index) => (\n                      <button key={index} onClick={() => setInputValue(inputValue + emoji)}>\n                        {emoji}\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}