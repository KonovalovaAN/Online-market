{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./Chat.css';import'./ChatAuth.css';import'./Error.css';import axios from'axios';import messageIcon from'./chatIcons/ChatIcon.svg';import closeIcon from'./chatIcons/CloseIcon.svg';import backArrow from'./chatIcons/BackArrow.png';import sendIcon from'./chatIcons/SendIcon.svg';import searchIcon from'./chatIcons/SearchIcon.svg';import clipIcon from'./chatIcons/ClipIcon.svg';import stickerIcon from'./chatIcons/StickerIcon.svg';import plusIcon from'./chatIcons/PlusIcon1.png';// Add a plus icon for creating new chats\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Chat=()=>{const[isOpen,setIsOpen]=useState(false);const[inputValue,setInputValue]=useState('');const[file,setFile]=useState(null);const[showEmojiPicker,setShowEmojiPicker]=useState(false);const[ws,setWs]=useState(null);const[error,setError]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);// Authentication state\nconst[isRegistering,setIsRegistering]=useState(false);// Registration state\nconst[fromUser,setFromUser]=useState('');const[toUser,setToUser]=useState('');const[messages,setMessages]=useState([]);const[password,setPassword]=useState('');const[searchQuery,setSearchQuery]=useState(\"\");// Search query\nconst[conversations,setConversations]=useState([]);const[showNewChatInput,setShowNewChatInput]=useState(false);// Control visibility of input field\nconst[newChatUsername,setNewChatUsername]=useState('');// Store new chat username\n// Fetch conversations after login\nconst loadConversations=async()=>{const response=await axios.post('http://25.43.123.165:8000/chat/load/conversations/',{fromUser});console.log(\"LOAD CONVERSATIONS\");// console.log(\"add\")\nconsole.log(response);setConversations(response.data);};const handleNewChatSubmit=async()=>{if(newChatUsername){try{const response=await axios.post('http://25.43.123.165:8000/chat/create_conversation/',{newChatUsername});if(response.data.success){console.log(\"success\");setToUser(newChatUsername);const usernameExists=conversations.some(convo=>convo.username===newChatUsername);if(!usernameExists){// Если нет, добавляем новый объект с username в начало массива\nsetConversations([{username:newChatUsername},...conversations]);}handleClickOnChat(newChatUsername);setShowNewChatInput(false);}else{console.log(\"not success\");setError('Пользователь не найден');}}catch(error){setError('Ошибка при создании чата');}}};const handleSend=()=>{if(inputValue.trim()||file){const timestamp=new Date().toISOString();const messageData=JSON.stringify({text:inputValue,file:file?URL.createObjectURL(file):null,timestamp});ws.send(messageData);console.log(\"Message sent:\",messageData);// setMessages([...messages, { text: inputValue, file, type: 'sent', timestamp }]);\nsetInputValue('');setFile(null);}};const handleClickOnChat=async toUser=>{const response=await axios.post('http://25.43.123.165:8000/chat/load/messages/',{fromUser,toUser});setMessages(response.data);const socket=new WebSocket(`ws://25.43.123.165:8000/ws/chats/${fromUser}/${toUser}/`);socket.onopen=()=>{console.log('WebSocket connected');};socket.onmessage=event=>{const data=JSON.parse(event.data);// console.log(\"onmessage trigger\")\n// console.log(fromUser, data.type)\n// data.type = fromUser === data.type ? 'sent' : 'received';\nsetMessages(prevMessages=>[...prevMessages,data]);};socket.onclose=()=>{console.log('WebSocket connection closed');};setWs(socket);};const handleRegister=()=>{// Mock registration logic; replace with API call if needed\nif(fromUser&&password){alert('Пользователь зарегистрирован!');setIsRegistering(false);}else{alert('Введите корректные данные для регистрации.');}};const handleLogin=async()=>{if(fromUser&&password){try{let response=await axios.post('http://25.43.123.165:8000/chat/login/',{fromUser,password});if(response.data.success){setIsAuthenticated(true);loadConversations();}else{setError('Неверный логин или пароль');}}catch(error){setError('Ошибка при авторизации');}}else{setError('Введите корректные данные для входа.');}};if(!isAuthenticated){return/*#__PURE__*/_jsx(\"div\",{className:\"auth-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:isRegistering?'Регистрация':'Вход'}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u041B\\u043E\\u0433\\u0438\\u043D\",value:fromUser,onChange:e=>setFromUser(e.target.value),className:\"auth-input\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",value:password,onChange:e=>setPassword(e.target.value),className:\"auth-input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:isRegistering?handleRegister:handleLogin,className:\"auth-button\",children:isRegistering?'Зарегистрироваться':'Войти'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsRegistering(!isRegistering),className:\"toggle-button\",children:isRegistering?'Уже есть аккаунт? Войти':'Нет аккаунта? Зарегистрироваться'}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"auth-error\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/path/to/error-icon.svg\",alt:\"Error\",className:\"error-icon\"}),/*#__PURE__*/_jsx(\"span\",{children:error})]})]})});}return/*#__PURE__*/_jsx(\"div\",{children:!isOpen?/*#__PURE__*/_jsx(\"div\",{className:\"chat-container\",onClick:()=>setIsOpen(true),children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",onClick:()=>loadConversations(),children:[\"\\u041F\\u043E\\u044F\\u0432\\u0438\\u043B\\u0438\\u0441\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B? \\u041F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u043D\\u0430\\u043C!\",/*#__PURE__*/_jsx(\"div\",{className:\"icon-container\",children:/*#__PURE__*/_jsx(\"img\",{src:messageIcon,alt:\"Message icon\",className:\"icon\"})})]})}):/*#__PURE__*/_jsxs(\"div\",{className:`chat-window ${isOpen?'open':'close'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[toUser?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"img\",{src:backArrow,alt:\"\\u041D\\u0430\\u0437\\u0430\\u0434\",className:\"icon\",onClick:()=>{ws.close();setWs(null);setToUser(null);}}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u0427\\u0430\\u0442 \\u0441 \",toUser]})]}):/*#__PURE__*/_jsx(\"span\",{children:\"\\u0412\\u0430\\u0448\\u0438 \\u0447\\u0430\\u0442\\u044B\"}),/*#__PURE__*/_jsx(\"img\",{src:closeIcon,alt:\"Close chat\",className:\"icon\",onClick:()=>setIsOpen(false)})]}),!toUser?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-field\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u041F\\u043E\\u0438\\u0441\\u043A \\u0447\\u0430\\u0442\\u043E\\u0432...\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value),className:\"search-input\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-list\",children:conversations.filter(conversation=>conversation.username.toLowerCase().includes(searchQuery.toLowerCase())).map((conversation,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"chat-item\",onClick:()=>{setToUser(conversation.username);handleClickOnChat(conversation.username);},children:conversation.username},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"new-chat-button\",onClick:()=>setShowNewChatInput(true),children:/*#__PURE__*/_jsx(\"img\",{src:plusIcon,alt:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0447\\u0430\\u0442\",className:\"add-chat-button\"})}),showNewChatInput&&/*#__PURE__*/_jsxs(\"div\",{className:\"new-chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",value:newChatUsername,onChange:e=>setNewChatUsername(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNewChatSubmit,children:\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0447\\u0430\\u0442\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowNewChatInput(false),children:\"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-body\",children:messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`message-bubble ${msg.type==='sent'?'sent':'received'}`,children:[msg.text&&/*#__PURE__*/_jsx(\"p\",{children:msg.text}),msg.timestamp&&/*#__PURE__*/_jsx(\"span\",{className:\"timestamp\",children:new Date(msg.timestamp).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",value:inputValue,onChange:e=>setInputValue(e.target.value),className:\"input-with-emoji\"}),/*#__PURE__*/_jsx(\"img\",{src:stickerIcon,alt:\"\\u0421\\u0442\\u0438\\u043A\\u0435\\u0440\\u044B\",className:\"emoji-button\",onClick:()=>setShowEmojiPicker(!showEmojiPicker)}),/*#__PURE__*/_jsx(\"img\",{src:sendIcon,alt:\"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\",className:\"send-button\",onClick:handleSend}),showEmojiPicker&&/*#__PURE__*/_jsx(\"div\",{className:\"emoji-picker\",children:['😊','😂','😍','😎'].map((emoji,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setInputValue(inputValue+emoji),children:emoji},index))})]})]})]})});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","axios","messageIcon","closeIcon","backArrow","sendIcon","searchIcon","clipIcon","stickerIcon","plusIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chat","isOpen","setIsOpen","inputValue","setInputValue","file","setFile","showEmojiPicker","setShowEmojiPicker","ws","setWs","error","setError","isAuthenticated","setIsAuthenticated","isRegistering","setIsRegistering","fromUser","setFromUser","toUser","setToUser","messages","setMessages","password","setPassword","searchQuery","setSearchQuery","conversations","setConversations","showNewChatInput","setShowNewChatInput","newChatUsername","setNewChatUsername","loadConversations","response","post","console","log","data","handleNewChatSubmit","success","usernameExists","some","convo","username","handleClickOnChat","handleSend","trim","timestamp","Date","toISOString","messageData","JSON","stringify","text","URL","createObjectURL","send","socket","WebSocket","onopen","onmessage","event","parse","prevMessages","onclose","handleRegister","alert","handleLogin","className","children","type","placeholder","value","onChange","e","target","onClick","src","alt","close","filter","conversation","toLowerCase","includes","map","index","msg","toLocaleTimeString","hour","minute","emoji"],"sources":["D:/Leva/BSU/course_3/sem_5/TP/press-f-project/dev-env/frontend-repo/Online-market/react-project/market/src/components/Chat.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Chat.css';\r\nimport './ChatAuth.css';\r\nimport './Error.css';\r\nimport axios from 'axios';\r\nimport messageIcon from './chatIcons/ChatIcon.svg';\r\nimport closeIcon from './chatIcons/CloseIcon.svg';\r\nimport backArrow from './chatIcons/BackArrow.png';\r\nimport sendIcon from './chatIcons/SendIcon.svg';\r\nimport searchIcon from './chatIcons/SearchIcon.svg';\r\nimport clipIcon from './chatIcons/ClipIcon.svg';\r\nimport stickerIcon from './chatIcons/StickerIcon.svg';\r\nimport plusIcon from './chatIcons/PlusIcon1.png'; // Add a plus icon for creating new chats\r\n\r\nconst Chat = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [ws, setWs] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Authentication state\r\n  const [isRegistering, setIsRegistering] = useState(false); // Registration state\r\n  const [fromUser, setFromUser] = useState('');\r\n  const [toUser, setToUser] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [password, setPassword] = useState('');\r\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Search query\r\n  const [conversations, setConversations] = useState([]);\r\n  const [showNewChatInput, setShowNewChatInput] = useState(false); // Control visibility of input field\r\n  const [newChatUsername, setNewChatUsername] = useState(''); // Store new chat username\r\n\r\n  // Fetch conversations after login\r\n  const loadConversations = async () => {\r\n    const response = await axios.post('http://25.43.123.165:8000/chat/load/conversations/', { fromUser });\r\n    console.log(\"LOAD CONVERSATIONS\")\r\n    // console.log(\"add\")\r\n    console.log(response)\r\n    setConversations(response.data);\r\n  };\r\n\r\n  const handleNewChatSubmit = async () => {\r\n    if (newChatUsername) {\r\n      try {\r\n        const response = await axios.post('http://25.43.123.165:8000/chat/create_conversation/', { newChatUsername });\r\n        if (response.data.success) {\r\n          console.log(\"success\")\r\n          setToUser(newChatUsername);\r\n          const usernameExists = conversations.some(convo => convo.username === newChatUsername);\r\n\r\n          if (!usernameExists) {\r\n            // Если нет, добавляем новый объект с username в начало массива\r\n            setConversations([{ username: newChatUsername }, ...conversations]);\r\n          }\r\n          handleClickOnChat(newChatUsername);\r\n          setShowNewChatInput(false);\r\n        } else {\r\n          console.log(\"not success\")\r\n          setError('Пользователь не найден');\r\n        }\r\n      } catch (error) {\r\n        setError('Ошибка при создании чата');\r\n      }\r\n    }\r\n  };\r\n\r\n    const handleSend = () => {\r\n  if (inputValue.trim() || file) {\r\n    const timestamp = new Date().toISOString();\r\n      const messageData = JSON.stringify({\r\n              text: inputValue,\r\n              file: file ? URL.createObjectURL(file) : null,\r\n              timestamp,\r\n            });\r\n\r\n            ws.send(messageData);\r\n            console.log(\"Message sent:\", messageData);\r\n\r\n            // setMessages([...messages, { text: inputValue, file, type: 'sent', timestamp }]);\r\n            setInputValue('');\r\n            setFile(null);\r\n  }\r\n};\r\n  const handleClickOnChat = async (toUser) => {\r\n    const response = await axios.post('http://25.43.123.165:8000/chat/load/messages/', { fromUser, toUser });\r\n    setMessages(response.data);\r\n    const socket = new WebSocket(`ws://25.43.123.165:8000/ws/chats/${fromUser}/${toUser}/`);\r\n    socket.onopen = () => {\r\n      console.log('WebSocket connected');\r\n    };\r\n    socket.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      // console.log(\"onmessage trigger\")\r\n      // console.log(fromUser, data.type)\r\n      // data.type = fromUser === data.type ? 'sent' : 'received';\r\n      setMessages((prevMessages) => [...prevMessages, data]);\r\n    };\r\n    socket.onclose = () => {\r\n      console.log('WebSocket connection closed');\r\n    };\r\n    setWs(socket);\r\n  };\r\n\r\n    const handleRegister = () => {\r\n    // Mock registration logic; replace with API call if needed\r\n    if (fromUser && password) {\r\n      alert('Пользователь зарегистрирован!');\r\n      setIsRegistering(false);\r\n    } else {\r\n      alert('Введите корректные данные для регистрации.');\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (fromUser && password) {\r\n      try {\r\n        let response = await axios.post('http://25.43.123.165:8000/chat/login/', { fromUser, password });\r\n        if (response.data.success) {\r\n          setIsAuthenticated(true);\r\n          loadConversations();\r\n        } else {\r\n          setError('Неверный логин или пароль');\r\n        }\r\n      } catch (error) {\r\n        setError('Ошибка при авторизации');\r\n      }\r\n    } else {\r\n      setError('Введите корректные данные для входа.');\r\n    }\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div className=\"auth-container\">\r\n        <div className=\"auth-box\">\r\n          <h2>{isRegistering ? 'Регистрация' : 'Вход'}</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Логин\"\r\n            value={fromUser}\r\n            onChange={(e) => setFromUser(e.target.value)}\r\n            className=\"auth-input\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"auth-input\"\r\n          />\r\n          <button onClick={isRegistering ? handleRegister : handleLogin} className=\"auth-button\">\r\n            {isRegistering ? 'Зарегистрироваться' : 'Войти'}\r\n          </button>\r\n          <button onClick={() => setIsRegistering(!isRegistering)} className=\"toggle-button\">\r\n            {isRegistering ? 'Уже есть аккаунт? Войти' : 'Нет аккаунта? Зарегистрироваться'}\r\n          </button>\r\n          {error && (\r\n            <div className=\"auth-error\">\r\n              <img src=\"/path/to/error-icon.svg\" alt=\"Error\" className=\"error-icon\" />\r\n              <span>{error}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!isOpen ? (\r\n        <div className=\"chat-container\" onClick={() => setIsOpen(true)}>\r\n          <div className=\"input-container\" onClick={() => loadConversations()}>\r\n            Появились вопросы? Пишите нам!\r\n            <div className=\"icon-container\">\r\n              <img src={messageIcon} alt=\"Message icon\" className=\"icon\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={`chat-window ${isOpen ? 'open' : 'close'}`}>\r\n          <div className=\"chat-header\">\r\n            {toUser ? (\r\n              <>\r\n                <img\r\n                  src={backArrow}\r\n                  alt=\"Назад\"\r\n                  className=\"icon\"\r\n                  onClick={() => {\r\n                    ws.close();\r\n                    setWs(null);\r\n                    setToUser(null);\r\n                  }}\r\n                />\r\n                <span>Чат с {toUser}</span>\r\n              </>\r\n            ) : (\r\n              <span>Ваши чаты</span>\r\n            )}\r\n            <img\r\n              src={closeIcon}\r\n              alt=\"Close chat\"\r\n              className=\"icon\"\r\n              onClick={() => setIsOpen(false)}\r\n            />\r\n          </div>\r\n\r\n          {!toUser ? (\r\n            <>\r\n              <div className=\"search-field\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Поиск чатов...\"\r\n                  value={searchQuery}\r\n                  onChange={(e) => setSearchQuery(e.target.value)}\r\n                  className=\"search-input\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"chat-list\">\r\n                {conversations\r\n                  .filter((conversation) =>\r\n                    conversation.username.toLowerCase().includes(searchQuery.toLowerCase())\r\n                  )\r\n                  .map((conversation, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"chat-item\"\r\n                      onClick={() => {\r\n                        setToUser(conversation.username);\r\n                        handleClickOnChat(conversation.username);\r\n                      }}\r\n                    >\r\n                      {conversation.username}\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n\r\n              <div className=\"new-chat-button\" onClick={() => setShowNewChatInput(true)}>\r\n                <img\r\n                    src={plusIcon}\r\n                    alt=\"Добавить чат\"\r\n                    className=\"add-chat-button\"\r\n                />\r\n              </div>\r\n\r\n              {showNewChatInput && (\r\n                  <div className=\"new-chat-input\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Введите имя пользователя\"\r\n                    value={newChatUsername}\r\n                    onChange={(e) => setNewChatUsername(e.target.value)}\r\n                  />\r\n                  <button onClick={handleNewChatSubmit}>Создать чат</button>\r\n                  <button onClick={() => setShowNewChatInput(false)}>Отменить</button>\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"chat-body\">\r\n                {messages.map((msg, index) => (\r\n                  <div key={index} className={`message-bubble ${msg.type === 'sent' ? 'sent' : 'received'}`}>\r\n                    {msg.text && <p>{msg.text}</p>}\r\n                    {msg.timestamp && (\r\n                      <span className=\"timestamp\">{new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"chat-input\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Введите сообщение\"\r\n                  value={inputValue}\r\n                  onChange={(e) => setInputValue(e.target.value)}\r\n                  className=\"input-with-emoji\"\r\n                />\r\n                <img\r\n                  src={stickerIcon}\r\n                  alt=\"Стикеры\"\r\n                  className=\"emoji-button\"\r\n                  onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n                />\r\n                <img\r\n                  src={sendIcon}\r\n                  alt=\"Отправить\"\r\n                  className=\"send-button\"\r\n                  onClick={handleSend}\r\n                />\r\n                {showEmojiPicker && (\r\n                  <div className=\"emoji-picker\">\r\n                    {['😊', '😂', '😍', '😎'].map((emoji, index) => (\r\n                      <button key={index} onClick={() => setInputValue(inputValue + emoji)}>\r\n                        {emoji}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}