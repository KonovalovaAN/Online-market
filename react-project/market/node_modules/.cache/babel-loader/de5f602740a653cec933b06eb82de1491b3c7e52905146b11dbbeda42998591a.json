{"ast":null,"code":"const API_LOGGING_URL = 'http://backend-domain.com/api/logs';\nexport const logEvent = async (level, message, metadata = {}) => {\n  const log = {\n    timestamp: new Date().toISOString(),\n    level,\n    message,\n    metadata\n  };\n  try {\n    // Отправка лога на сервер\n    await fetch(API_LOGGING_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(log)\n    });\n    console.log('Log sent:', log);\n  } catch (error) {\n    console.error('Failed to send log:', error);\n  }\n};","map":{"version":3,"names":["API_LOGGING_URL","logEvent","level","message","metadata","log","timestamp","Date","toISOString","fetch","method","headers","body","JSON","stringify","console","error"],"sources":["/home/plotvichka_2/bsu/3_course/TP/Online-market/react-project/market/src/utils/logger.js"],"sourcesContent":["const API_LOGGING_URL = 'http://backend-domain.com/api/logs';\n\n\nexport const logEvent = async (level, message, metadata = {}) => {\n    const log = {\n        timestamp: new Date().toISOString(),\n        level,\n        message,\n        metadata,\n    };\n\n    try {\n        // Отправка лога на сервер\n        await fetch(API_LOGGING_URL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(log),\n        });\n        console.log('Log sent:', log);\n    } catch (error) {\n        console.error('Failed to send log:', error);\n    }\n};\n"],"mappings":"AAAA,MAAMA,eAAe,GAAG,oCAAoC;AAG5D,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,KAAK,EAAEC,OAAO,EAAEC,QAAQ,GAAG,CAAC,CAAC,KAAK;EAC7D,MAAMC,GAAG,GAAG;IACRC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnCN,KAAK;IACLC,OAAO;IACPC;EACJ,CAAC;EAED,IAAI;IACA;IACA,MAAMK,KAAK,CAACT,eAAe,EAAE;MACzBU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,GAAG;IAC5B,CAAC,CAAC;IACFU,OAAO,CAACV,GAAG,CAAC,WAAW,EAAEA,GAAG,CAAC;EACjC,CAAC,CAAC,OAAOW,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC/C;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}