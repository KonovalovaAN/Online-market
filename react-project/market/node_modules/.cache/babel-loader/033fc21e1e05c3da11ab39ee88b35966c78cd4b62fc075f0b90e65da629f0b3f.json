{"ast":null,"code":"var _jsxFileName = \"/home/plotvichka_2/bsu/3_course/TP/Online-market/react-project/market/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n//\n// const ws = new WebSocket('ws://localhost:8000/ws/chat/');\n//\n// const Chat = () => {\n//     const [messages, setMessages] = useState([]);\n//     const [inputValue, setInputValue] = useState('');\n//\n//     useEffect(() => {\n//         ws.onmessage = (event) => {\n//             const data = JSON.parse(event.data);\n//             setMessages((prev) => [...prev, data]);\n//         };\n//     }, []);\n//\n//     const sendMessage = () => {\n//         if (inputValue.trim()) {\n//             ws.send(JSON.stringify({ message: inputValue }));\n//             setInputValue('');\n//         }\n//     };\n//\n//     return (\n//         <div>\n//             <div>\n//                 {messages.map((msg, index) => (\n//                     <p key={index}>\n//                         <b>{msg.sender}</b>: {msg.message} <i>{msg.timestamp}</i>\n//                     </p>\n//                 ))}\n//             </div>\n//             <input\n//                 type=\"text\"\n//                 value={inputValue}\n//                 onChange={(e) => setInputValue(e.target.value)}\n//             />\n//             <button onClick={sendMessage}>Send</button>\n//         </div>\n//     );\n// };\n//\n// export default Chat;\n\nimport React, { useState, useEffect } from 'react';\nimport './Chat.css';\nimport messageIcon from './chatIcons/ChatIcon.svg';\nimport closeIcon from './chatIcons/CloseIcon.svg';\nimport sendIcon from './chatIcons/SendIcon.svg';\nimport searchIcon from './chatIcons/SearchIcon.svg';\nimport clipIcon from './chatIcons/ClipIcon.svg';\nimport StickerIcon from './chatIcons/StickerIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [closing, setClosing] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [file, setFile] = useState(null);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false); // State for emoji picker\n  const [ws, setWs] = useState(null);\n  useEffect(() => {\n    // Устанавливаем соединение с WebSocket сервером\n    const socket = new WebSocket('ws://localhost:8000/ws/chat/'); // Замените URL на ваш сервер\n\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setMessages(prev => [...prev, data]); // Добавляем новое сообщение в список\n    };\n    setWs(socket);\n    return () => {\n      socket.close(); // Закрытие соединения при размонтировании компонента\n    };\n  }, []);\n  const toggleChat = () => {\n    if (isOpen) {\n      setClosing(true);\n      setTimeout(() => {\n        setIsOpen(false);\n        setClosing(false);\n      }, 400);\n    } else {\n      setIsOpen(true);\n    }\n  };\n  const handleSend = () => {\n    if (inputValue.trim() || file) {\n      const timestamp = new Date().toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      // Отправляем сообщение через WebSocket\n      if (ws) {\n        ws.send(JSON.stringify({\n          message: inputValue,\n          file: file ? URL.createObjectURL(file) : null,\n          // Добавляем ссылку на файл, если он есть\n          timestamp\n        }));\n      }\n      setMessages([...messages, {\n        text: inputValue,\n        file,\n        type: 'sent',\n        timestamp\n      }]);\n      setInputValue(''); // Очищаем input\n      setFile(null); // Очищаем файл\n    }\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n  const handleEmojiSelect = emoji => {\n    setInputValue(inputValue + emoji); // Добавляем эмодзи в поле ввода\n    setShowEmojiPicker(false); // Закрываем эмодзи-пикер\n  };\n  const emojis = ['😊', '😂', '😢', '😍', '😎', '😜', '😇']; // Список эмодзи\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isOpen && !closing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      onClick: toggleChat,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [\"\\u041F\\u043E\\u044F\\u0432\\u0438\\u043B\\u0438\\u0441\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B? \\u041F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u043D\\u0430\\u043C!\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: messageIcon,\n            alt: \"Message icon\",\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-window ${isOpen && !closing ? 'open' : 'close'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: searchIcon,\n          alt: \"Search icon\",\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: closeIcon,\n          alt: \"Close chat\",\n          className: \"icon\",\n          onClick: toggleChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-bubble ${msg.type === 'sent' ? 'sent' : 'received'}`,\n          children: [msg.text && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 30\n          }, this), msg.file && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-attachment\",\n            children: [\"\\uD83D\\uDCCE \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: msg.file,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: msg.file\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }, this), msg.timestamp && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timestamp\",\n            children: msg.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 35\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-input\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: clipIcon,\n            alt: \"Attach icon\",\n            className: \"clip-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-input\",\n          type: \"file\",\n          onChange: handleFileChange,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n          className: \"input-with-emoji\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"emoji-button\",\n          onClick: toggleEmojiPicker,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: StickerIcon,\n            alt: \"Emoji icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSend,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sendIcon,\n            alt: \"Send icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji-picker\",\n          children: emojis.map((emoji, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"emoji\",\n            onClick: () => handleEmojiSelect(emoji),\n            children: emoji\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"pzVWwA8pzFUl7hrfTtOtjMQwwzA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","messageIcon","closeIcon","sendIcon","searchIcon","clipIcon","StickerIcon","jsxDEV","_jsxDEV","Chat","_s","isOpen","setIsOpen","closing","setClosing","messages","setMessages","inputValue","setInputValue","file","setFile","showEmojiPicker","setShowEmojiPicker","ws","setWs","socket","WebSocket","onmessage","event","data","JSON","parse","prev","close","toggleChat","setTimeout","handleSend","trim","timestamp","Date","toLocaleTimeString","hour","minute","send","stringify","message","URL","createObjectURL","text","type","handleFileChange","target","files","toggleEmojiPicker","handleEmojiSelect","emoji","emojis","children","className","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","href","rel","htmlFor","id","onChange","style","display","placeholder","value","e","_c","$RefreshReg$"],"sources":["/home/plotvichka_2/bsu/3_course/TP/Online-market/react-project/market/src/components/Chat.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n//\n// const ws = new WebSocket('ws://localhost:8000/ws/chat/');\n//\n// const Chat = () => {\n//     const [messages, setMessages] = useState([]);\n//     const [inputValue, setInputValue] = useState('');\n//\n//     useEffect(() => {\n//         ws.onmessage = (event) => {\n//             const data = JSON.parse(event.data);\n//             setMessages((prev) => [...prev, data]);\n//         };\n//     }, []);\n//\n//     const sendMessage = () => {\n//         if (inputValue.trim()) {\n//             ws.send(JSON.stringify({ message: inputValue }));\n//             setInputValue('');\n//         }\n//     };\n//\n//     return (\n//         <div>\n//             <div>\n//                 {messages.map((msg, index) => (\n//                     <p key={index}>\n//                         <b>{msg.sender}</b>: {msg.message} <i>{msg.timestamp}</i>\n//                     </p>\n//                 ))}\n//             </div>\n//             <input\n//                 type=\"text\"\n//                 value={inputValue}\n//                 onChange={(e) => setInputValue(e.target.value)}\n//             />\n//             <button onClick={sendMessage}>Send</button>\n//         </div>\n//     );\n// };\n//\n// export default Chat;\n\n\nimport React, { useState, useEffect } from 'react';\nimport './Chat.css';\nimport messageIcon from './chatIcons/ChatIcon.svg';\nimport closeIcon from './chatIcons/CloseIcon.svg';\nimport sendIcon from './chatIcons/SendIcon.svg';\nimport searchIcon from './chatIcons/SearchIcon.svg';\nimport clipIcon from './chatIcons/ClipIcon.svg';\nimport StickerIcon from './chatIcons/StickerIcon.svg';\n\nconst Chat = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [closing, setClosing] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [file, setFile] = useState(null);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false); // State for emoji picker\n  const [ws, setWs] = useState(null);\n\n  useEffect(() => {\n    // Устанавливаем соединение с WebSocket сервером\n    const socket = new WebSocket('ws://localhost:8000/ws/chat/'); // Замените URL на ваш сервер\n\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      setMessages((prev) => [...prev, data]); // Добавляем новое сообщение в список\n    };\n\n    setWs(socket);\n\n    return () => {\n      socket.close(); // Закрытие соединения при размонтировании компонента\n    };\n  }, []);\n\n  const toggleChat = () => {\n    if (isOpen) {\n      setClosing(true);\n      setTimeout(() => {\n        setIsOpen(false);\n        setClosing(false);\n      }, 400);\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const handleSend = () => {\n    if (inputValue.trim() || file) {\n      const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n      // Отправляем сообщение через WebSocket\n      if (ws) {\n        ws.send(\n          JSON.stringify({\n            message: inputValue,\n            file: file ? URL.createObjectURL(file) : null, // Добавляем ссылку на файл, если он есть\n            timestamp,\n          })\n        );\n      }\n\n      setMessages([\n        ...messages,\n        { text: inputValue, file, type: 'sent', timestamp },\n      ]);\n      setInputValue(''); // Очищаем input\n      setFile(null); // Очищаем файл\n    }\n  };\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  const handleEmojiSelect = (emoji) => {\n    setInputValue(inputValue + emoji); // Добавляем эмодзи в поле ввода\n    setShowEmojiPicker(false); // Закрываем эмодзи-пикер\n  };\n\n  const emojis = ['😊', '😂', '😢', '😍', '😎', '😜', '😇']; // Список эмодзи\n\n  return (\n    <div>\n      {!isOpen && !closing ? (\n        <div className=\"chat-container\" onClick={toggleChat}>\n          <div className=\"input-container\">\n            Появились вопросы? Пишите нам!\n            <div className=\"icon-container\">\n              <img src={messageIcon} alt=\"Message icon\" className=\"icon\" />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className={`chat-window ${isOpen && !closing ? 'open' : 'close'}`}>\n          <div className=\"chat-header\">\n            <img src={searchIcon} alt=\"Search icon\" className=\"icon\" />\n            Напишите ваше сообщение\n            <img src={closeIcon} alt=\"Close chat\" className=\"icon\" onClick={toggleChat} />\n          </div>\n          <div className=\"chat-body\">\n            {messages.map((msg, index) => (\n              <div\n                key={index}\n                className={`message-bubble ${msg.type === 'sent' ? 'sent' : 'received'}`}\n              >\n                {msg.text && <p>{msg.text}</p>}\n                {msg.file && (\n                  <div className=\"file-attachment\">\n                    📎 <a href={msg.file} target=\"_blank\" rel=\"noopener noreferrer\">{msg.file}</a>\n                  </div>\n                )}\n                {msg.timestamp && <span className=\"timestamp\">{msg.timestamp}</span>}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"chat-input\">\n            <label htmlFor=\"file-input\">\n              <img src={clipIcon} alt=\"Attach icon\" className=\"clip-icon\" />\n            </label>\n            <input\n              id=\"file-input\"\n              type=\"file\"\n              onChange={handleFileChange}\n              style={{ display: 'none' }}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Введите сообщение\"\n              className=\"input-with-emoji\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n            />\n            <button className=\"emoji-button\" onClick={toggleEmojiPicker}>\n              <img src={StickerIcon} alt=\"Emoji icon\" />\n            </button>\n            <button className=\"send-button\" onClick={handleSend}>\n              <img src={sendIcon} alt=\"Send icon\" />\n            </button>\n\n            {showEmojiPicker && (\n              <div className=\"emoji-picker\">\n                {emojis.map((emoji, index) => (\n                  <button\n                    key={index}\n                    className=\"emoji\"\n                    onClick={() => handleEmojiSelect(emoji)}\n                  >\n                    {emoji}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}