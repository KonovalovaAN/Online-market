{"ast":null,"code":"var _jsxFileName = \"/home/plotvichka_2/bsu/3_course/TP/Online-market/react-project/market/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Chat.css';\nimport './ChatAuth.css';\nimport './Error.css';\nimport axios from 'axios';\nimport messageIcon from './chatIcons/ChatIcon.svg';\nimport closeIcon from './chatIcons/CloseIcon.svg';\nimport backArrow from './chatIcons/BackArrow.png';\nimport sendIcon from './chatIcons/SendIcon.svg';\nimport searchIcon from './chatIcons/SearchIcon.svg';\nimport clipIcon from './chatIcons/ClipIcon.svg';\nimport stickerIcon from './chatIcons/StickerIcon.svg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [closing, setClosing] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [file, setFile] = useState(null);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [ws, setWs] = useState(null);\n  const [error, setError] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Authentication state\n  const [isRegistering, setIsRegistering] = useState(false); // Registration state\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [chats, setChats] = useState([]); // Все чаты\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Запрос поиска\n  const [selectedChat, setSelectedChat] = useState(null); // Текущий выбранный чат\n\n  useEffect(() => {\n    console.log(\"using useEffect\");\n    console.log(new Date().toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }));\n    const socket = new WebSocket(`ws://localhost:8000/ws/chats/${username}/`);\n    socket.onopen = () => console.log('WebSocket connected');\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      console.log(data);\n      // setMessages((prev) => [...prev, data]);\n      // setMessages([data])\n    };\n    socket.onerror = error => console.error('WebSocket Error:', error);\n    socket.onclose = () => console.log('WebSocket connection closed');\n    setWs(socket);\n    return () => {\n      socket.close();\n    };\n  }, [username]);\n  const handleSend = () => {\n    if (inputValue.trim() || file) {\n      console.log(\"sending message..\");\n      const timestamp = new Date().toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      const socket = new WebSocket(`ws://localhost:8000/ws/chats/${username}/${selectedChat.username}/`);\n      socket.onopen = () => {\n        console.log('WebSocket connected');\n        setWs(socket);\n        console.log(\"before send\");\n        ws.send(JSON.stringify({\n          text: inputValue,\n          file: file ? URL.createObjectURL(file) : null,\n          timestamp\n        }));\n        console.log(\"after send\");\n      };\n      socket.onmessage = event => {\n        const data = JSON.parse(event.data);\n        selectedChat.messages = [selectedChat.messages, data.message];\n        console.log(selectedChat);\n        // setMessages((prev) => [...prev, data]);\n        // setMessages([data])\n      };\n      socket.onerror = error => console.error('WebSocket Error:', error);\n      socket.onclose = () => console.log('WebSocket connection closed');\n      setWs(socket);\n      // return () => {\n      //   socket.close();\n      // };\n      //   if (ws) {\n      //     ws.send(JSON.stringify({ text: inputValue, file: file ? URL.createObjectURL(file) : null, timestamp }));\n      //   }\n      setMessages([...messages, {\n        text: inputValue,\n        file,\n        type: 'sent',\n        timestamp\n      }]);\n      setInputValue('');\n      setFile(null);\n      console.log(\"end sending...\");\n    }\n  };\n  const handleLogin = async () => {\n    if (username && password) {\n      // setIsAuthenticated(true);\n      try {\n        let response = await axios.post('http://localhost:8000/chat/login/', {\n          username,\n          password\n        });\n        if (response.data.success) {\n          setIsAuthenticated(true);\n          response = await axios.post('http://localhost:8000/chat/load/', {\n            username\n          });\n          console.log(response);\n          console.log(response.data);\n\n          // console.log(response.data.alina)\n          setChats(response.data);\n        } else {\n          setError('Неверный логин или пароль');\n        }\n      } catch (error) {\n        setError('Ошибка при авторизации');\n      }\n    } else {\n      setError('Введите корректные данные для входа.');\n    }\n  };\n  const handleRegister = () => {\n    // Mock registration logic; replace with API call if needed\n    if (username && password) {\n      alert('Пользователь зарегистрирован!');\n      setIsRegistering(false);\n    } else {\n      alert('Введите корректные данные для регистрации.');\n    }\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isRegistering ? 'Регистрация' : 'Вход'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"auth-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"auth-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isRegistering ? handleRegister : handleLogin,\n          className: \"auth-button\",\n          children: isRegistering ? 'Зарегистрироваться' : 'Войти'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRegistering(!isRegistering),\n          className: \"toggle-button\",\n          children: isRegistering ? 'Уже есть аккаунт? Войти' : 'Нет аккаунта? Зарегистрироваться'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/path/to/error-icon.svg\",\n            alt: \"Error\",\n            className: \"error-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      onClick: () => setIsOpen(true),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [\"\\u041F\\u043E\\u044F\\u0432\\u0438\\u043B\\u0438\\u0441\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B? \\u041F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u043D\\u0430\\u043C!\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: messageIcon,\n            alt: \"Message icon\",\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-window ${isOpen ? 'open' : 'close'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: backArrow,\n            alt: \"\\u041D\\u0430\\u0437\\u0430\\u0434\",\n            className: \"icon\",\n            onClick: () => setSelectedChat(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u0427\\u0430\\u0442 \\u0441 \", selectedChat.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0412\\u0430\\u0448\\u0438 \\u0447\\u0430\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: closeIcon,\n          alt: \"Close chat\",\n          className: \"icon\",\n          onClick: () => setIsOpen(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), !selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-field\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u0447\\u0430\\u0442\\u043E\\u0432...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-list\",\n          children: chats.filter(chat => chat.username.toLowerCase().includes(searchQuery.toLowerCase())).map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-item\",\n            onClick: () => {\n              console.log(chat);\n              console.log(\"aaaaaaaaaaaaaaaaaaa\");\n              setSelectedChat(chat);\n            },\n            children: chat.username\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: selectedChat.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [msg && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 31\n            }, this), msg.timestamp && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timestamp\",\n              children: msg.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 25\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            className: \"input-with-emoji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stickerIcon,\n            alt: \"\\u0421\\u0442\\u0438\\u043A\\u0435\\u0440\\u044B\",\n            className: \"emoji-button\",\n            onClick: () => setShowEmojiPicker(!showEmojiPicker)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sendIcon,\n            alt: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\",\n            className: \"send-button\",\n            onClick: handleSend\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emoji-picker\",\n            children: ['😊', '😂', '😍', '😎'].map((emoji, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setInputValue(inputValue + emoji),\n              children: emoji\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 27\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"gafuJDJM32dQMXpqMWpDyTp8Yr0=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","messageIcon","closeIcon","backArrow","sendIcon","searchIcon","clipIcon","stickerIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","isOpen","setIsOpen","closing","setClosing","messages","setMessages","inputValue","setInputValue","file","setFile","showEmojiPicker","setShowEmojiPicker","ws","setWs","error","setError","isAuthenticated","setIsAuthenticated","isRegistering","setIsRegistering","username","setUsername","password","setPassword","chats","setChats","searchQuery","setSearchQuery","selectedChat","setSelectedChat","console","log","Date","toLocaleTimeString","hour","minute","second","socket","WebSocket","onopen","onmessage","event","data","JSON","parse","onerror","onclose","close","handleSend","trim","timestamp","send","stringify","text","URL","createObjectURL","message","type","handleLogin","response","post","success","handleRegister","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","src","alt","filter","chat","toLowerCase","includes","map","index","msg","emoji","_c","$RefreshReg$"],"sources":["/home/plotvichka_2/bsu/3_course/TP/Online-market/react-project/market/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Chat.css';\nimport './ChatAuth.css'\nimport './Error.css'\nimport axios from 'axios'\nimport messageIcon from './chatIcons/ChatIcon.svg';\nimport closeIcon from './chatIcons/CloseIcon.svg';\nimport backArrow from './chatIcons/BackArrow.png'\nimport sendIcon from './chatIcons/SendIcon.svg';\nimport searchIcon from './chatIcons/SearchIcon.svg';\nimport clipIcon from './chatIcons/ClipIcon.svg';\nimport stickerIcon from './chatIcons/StickerIcon.svg';\n\nconst Chat = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [closing, setClosing] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [file, setFile] = useState(null);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [ws, setWs] = useState(null);\n\n  const [error, setError] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Authentication state\n  const [isRegistering, setIsRegistering] = useState(false); // Registration state\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [chats, setChats] = useState([]); // Все чаты\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Запрос поиска\n  const [selectedChat, setSelectedChat] = useState(null); // Текущий выбранный чат\n\n\n  useEffect(() => {\n    console.log(\"using useEffect\")\n    console.log(new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit'}));\n    const socket = new WebSocket(`ws://localhost:8000/ws/chats/${username}/`);\n    socket.onopen = () => console.log('WebSocket connected');\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      console.log(data)\n      // setMessages((prev) => [...prev, data]);\n      // setMessages([data])\n    };\n    socket.onerror = (error) => console.error('WebSocket Error:', error);\n    socket.onclose = () => console.log('WebSocket connection closed');\n    setWs(socket);\n\n    return () => {\n      socket.close();\n    };\n  }, [username]);\n\n    const handleSend = () => {\n      if (inputValue.trim() || file) {\n        console.log(\"sending message..\")\n        const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n        const socket = new WebSocket(`ws://localhost:8000/ws/chats/${username}/${selectedChat.username}/`);\n        socket.onopen = () => {\n          console.log('WebSocket connected');\n          setWs(socket);\n          console.log(\"before send\")\n          ws.send(JSON.stringify({ text: inputValue, file: file ? URL.createObjectURL(file) : null, timestamp }));\n          console.log(\"after send\")\n        }\n        socket.onmessage = (event) => {\n          const data = JSON.parse(event.data);\n          selectedChat.messages = [selectedChat.messages, data.message]\n          console.log(selectedChat)\n          // setMessages((prev) => [...prev, data]);\n          // setMessages([data])\n        };\n        socket.onerror = (error) => console.error('WebSocket Error:', error);\n        socket.onclose = () => console.log('WebSocket connection closed');\n        setWs(socket)\n      // return () => {\n      //   socket.close();\n      // };\n      //   if (ws) {\n      //     ws.send(JSON.stringify({ text: inputValue, file: file ? URL.createObjectURL(file) : null, timestamp }));\n      //   }\n        setMessages([...messages, { text: inputValue, file, type: 'sent', timestamp }]);\n        setInputValue('');\n        setFile(null);\n        console.log(\"end sending...\")\n      }\n    };\n\n  const handleLogin = async () => {\n  if (username && password) {\n    // setIsAuthenticated(true);\n    try {\n      let response = await axios.post('http://localhost:8000/chat/login/', { username, password });\n      if (response.data.success) {\n        setIsAuthenticated(true);\n        response = await axios.post('http://localhost:8000/chat/load/', { username });\n        console.log(response)\n        console.log(response.data)\n\n        // console.log(response.data.alina)\n        setChats(response.data)\n      } else {\n        setError('Неверный логин или пароль');\n      }\n    } catch (error) {\n      setError('Ошибка при авторизации');\n    }\n  } else {\n    setError('Введите корректные данные для входа.');\n  }\n};\n\n\n  const handleRegister = () => {\n    // Mock registration logic; replace with API call if needed\n    if (username && password) {\n      alert('Пользователь зарегистрирован!');\n      setIsRegistering(false);\n    } else {\n      alert('Введите корректные данные для регистрации.');\n    }\n  };\n\n  if (!isAuthenticated) {\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-box\">\n        <h2>{isRegistering ? 'Регистрация' : 'Вход'}</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Логин\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          className=\"auth-input\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Пароль\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"auth-input\"\n        />\n        <button onClick={isRegistering ? handleRegister : handleLogin} className=\"auth-button\">\n          {isRegistering ? 'Зарегистрироваться' : 'Войти'}\n        </button>\n        <button onClick={() => setIsRegistering(!isRegistering)} className=\"toggle-button\">\n          {isRegistering ? 'Уже есть аккаунт? Войти' : 'Нет аккаунта? Зарегистрироваться'}\n        </button>\n\n        {/* Отображение ошибки */}\n        {error && (\n  <div className=\"auth-error\">\n    <img src=\"/path/to/error-icon.svg\" alt=\"Error\" className=\"error-icon\" />\n    <span>{error}</span>\n  </div>\n)}\n      </div>\n    </div>\n  );\n}\n\n\n\n  return (\n    <div>\n      {!isOpen ? (\n        <div className=\"chat-container\" onClick={() => setIsOpen(true)}>\n          <div className=\"input-container\">\n            Появились вопросы? Пишите нам!\n            <div className=\"icon-container\">\n              <img src={messageIcon} alt=\"Message icon\" className=\"icon\" />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className={`chat-window ${isOpen ? 'open' : 'close'}`}>\n          <div className=\"chat-header\">\n            {selectedChat ? (\n                <>\n                  {/*<button*/}\n                  {/*    className=\"back-button\"*/}\n                  {/*    onClick={() => setSelectedChat(null)}*/}\n                  {/*>*/}\n                  {/*  ← Назад*/}\n                  {/*</button>*/}\n                  <img\n                      src={backArrow}\n                      alt=\"Назад\"\n                      className=\"icon\"\n                      onClick={() => setSelectedChat(null)}\n                  />\n                  <span>Чат с {selectedChat.username}</span>\n                </>\n            ) : (\n                <span>Ваши чаты</span>\n            )}\n            <img\n                src={closeIcon}\n                alt=\"Close chat\"\n                className=\"icon\"\n              onClick={() => setIsOpen(false)}\n            />\n          </div>\n\n          {!selectedChat ? (\n            <>\n              {/* Поле поиска */}\n              <div className=\"search-field\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Поиск чатов...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"search-input\"\n                />\n              </div>\n\n              {/* Список чатов */}\n              <div className=\"chat-list\">\n                {chats\n                  .filter((chat) =>\n                    chat.username\n                      .toLowerCase()\n                      .includes(searchQuery.toLowerCase())\n                  )\n                  .map((chat, index) => (\n                    <div\n                      key={index}\n                      className=\"chat-item\"\n                      onClick={() => {\n                          console.log(chat);\n                          console.log(\"aaaaaaaaaaaaaaaaaaa\")\n                          setSelectedChat(chat);}}\n                    >\n                      {chat.username}\n                    </div>\n                  ))}\n              </div>\n            </>\n          ) : (\n            <>\n              {/* Переписка с выбранным собеседником */}\n              <div className=\"chat-body\">\n                {selectedChat.messages\n                  .map((msg, index) => (\n                    <div\n                      key={index}\n                      // className={`message-bubble ${\n                      //   msg.type === 'sent' ? 'sent' : 'received'\n                      // }`}\n                    >\n                      {msg && <p>{msg}</p>}\n                      {msg.timestamp && (\n                        <span className=\"timestamp\">{msg.timestamp}</span>\n                      )}\n                    </div>\n                  ))}\n              </div>\n\n              {/* Поле ввода сообщения */}\n              <div className=\"chat-input\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Введите сообщение\"\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    className=\"input-with-emoji\"\n                />\n                <img\n                    src={stickerIcon}\n                    alt=\"Стикеры\"\n                    className=\"emoji-button\"\n                    onClick={() => setShowEmojiPicker(!showEmojiPicker)}\n                />\n                {/*<button*/}\n                {/*    className=\"emoji-button\"*/}\n                {/*    onClick={() => setShowEmojiPicker(!showEmojiPicker)}*/}\n                {/*>*/}\n                {/*  😊*/}\n                {/*</button>*/}\n                {/*<button className=\"send-button\" onClick={handleSend}>*/}\n                {/*  Отправить*/}\n                {/*</button>*/}\n                <img\n                    src={sendIcon}\n                    alt=\"Отправить\"\n                    className=\"send-button\"\n                    onClick={handleSend}\n                />\n                {showEmojiPicker && (\n                    <div className=\"emoji-picker\">\n                      {['😊', '😂', '😍', '😎'].map((emoji, index) => (\n                          <button\n                              key={index}\n                              onClick={() => setInputValue(inputValue + emoji)}\n                          >\n                            {emoji}\n                          </button>\n                      ))}\n                    </div>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}