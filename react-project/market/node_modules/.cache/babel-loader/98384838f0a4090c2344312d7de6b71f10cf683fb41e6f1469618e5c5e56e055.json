{"ast":null,"code":"const API_LOGGING_URL='http://backend-domain.com/api/logs';export const logEvent=async function(level,message){let metadata=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const log={timestamp:new Date().toISOString(),level,message,metadata};try{// Отправка лога на сервер\nawait fetch(API_LOGGING_URL,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(log)});console.log('Log sent:',log);}catch(error){console.error('Failed to send log:',error);}};","map":{"version":3,"names":["API_LOGGING_URL","logEvent","level","message","metadata","arguments","length","undefined","log","timestamp","Date","toISOString","fetch","method","headers","body","JSON","stringify","console","error"],"sources":["/home/plotvichka_2/bsu/3_course/TP/Online-market/react-project/market/src/utils/logger.js"],"sourcesContent":["const API_LOGGING_URL = 'http://backend-domain.com/api/logs';\n\n\nexport const logEvent = async (level, message, metadata = {}) => {\n    const log = {\n        timestamp: new Date().toISOString(),\n        level,\n        message,\n        metadata,\n    };\n\n    try {\n        // Отправка лога на сервер\n        await fetch(API_LOGGING_URL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(log),\n        });\n        console.log('Log sent:', log);\n    } catch (error) {\n        console.error('Failed to send log:', error);\n    }\n};\n"],"mappings":"AAAA,KAAM,CAAAA,eAAe,CAAG,oCAAoC,CAG5D,MAAO,MAAM,CAAAC,QAAQ,CAAG,cAAAA,CAAOC,KAAK,CAAEC,OAAO,CAAoB,IAAlB,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACxD,KAAM,CAAAG,GAAG,CAAG,CACRC,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCT,KAAK,CACLC,OAAO,CACPC,QACJ,CAAC,CAED,GAAI,CACA;AACA,KAAM,CAAAQ,KAAK,CAACZ,eAAe,CAAE,CACzBa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACT,GAAG,CAC5B,CAAC,CAAC,CACFU,OAAO,CAACV,GAAG,CAAC,WAAW,CAAEA,GAAG,CAAC,CACjC,CAAE,MAAOW,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC/C,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}