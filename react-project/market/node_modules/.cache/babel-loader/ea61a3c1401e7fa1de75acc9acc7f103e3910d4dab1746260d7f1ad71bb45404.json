{"ast":null,"code":"var _jsxFileName = \"/home/plotvichka_2/bsu/3_course/TP/Online-market/react-project/market/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ws = new WebSocket('ws://localhost:8000/ws/chat/');\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  useEffect(() => {\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setMessages(prev => [...prev, data]);\n    };\n  }, []);\n  const sendMessage = () => {\n    if (inputValue.trim()) {\n      ws.send(JSON.stringify({\n        message: inputValue\n      }));\n      setInputValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: msg.sender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), \": \", msg.message, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: msg.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 60\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"GG/YeSFNrWOWKG591Wbb47E4YjM=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ws","WebSocket","Chat","_s","messages","setMessages","inputValue","setInputValue","onmessage","event","data","JSON","parse","prev","sendMessage","trim","send","stringify","message","children","map","msg","index","sender","fileName","_jsxFileName","lineNumber","columnNumber","timestamp","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/plotvichka_2/bsu/3_course/TP/Online-market/react-project/market/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ws = new WebSocket('ws://localhost:8000/ws/chat/');\n\nconst Chat = () => {\n    const [messages, setMessages] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n\n    useEffect(() => {\n        ws.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            setMessages((prev) => [...prev, data]);\n        };\n    }, []);\n\n    const sendMessage = () => {\n        if (inputValue.trim()) {\n            ws.send(JSON.stringify({ message: inputValue }));\n            setInputValue('');\n        }\n    };\n\n    return (\n        <div>\n            <div>\n                {messages.map((msg, index) => (\n                    <p key={index}>\n                        <b>{msg.sender}</b>: {msg.message} <i>{msg.timestamp}</i>\n                    </p>\n                ))}\n            </div>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={(e) => setInputValue(e.target.value)}\n            />\n            <button onClick={sendMessage}>Send</button>\n        </div>\n    );\n};\n\nexport default Chat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAAC,8BAA8B,CAAC;AAExD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZG,EAAE,CAACQ,SAAS,GAAIC,KAAK,IAAK;MACtB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnCL,WAAW,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,IAAI,CAAC,CAAC;IAC1C,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIR,UAAU,CAACS,IAAI,CAAC,CAAC,EAAE;MACnBf,EAAE,CAACgB,IAAI,CAACL,IAAI,CAACM,SAAS,CAAC;QAAEC,OAAO,EAAEZ;MAAW,CAAC,CAAC,CAAC;MAChDC,aAAa,CAAC,EAAE,CAAC;IACrB;EACJ,CAAC;EAED,oBACIR,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EACKf,QAAQ,CAACgB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBvB,OAAA;QAAAoB,QAAA,gBACIpB,OAAA;UAAAoB,QAAA,EAAIE,GAAG,CAACE;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,MAAE,EAACN,GAAG,CAACH,OAAO,EAAC,GAAC,eAAAnB,OAAA;UAAAoB,QAAA,EAAIE,GAAG,CAACO;QAAS;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GADrDL,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN5B,OAAA;MACI8B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAExB,UAAW;MAClByB,QAAQ,EAAGC,CAAC,IAAKzB,aAAa,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACF5B,OAAA;MAAQmC,OAAO,EAAEpB,WAAY;MAAAK,QAAA,EAAC;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd,CAAC;AAACxB,EAAA,CAnCID,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}